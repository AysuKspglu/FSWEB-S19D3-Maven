########################################
# Server
########################################
server.port=9000

########################################
# H2 (dev) ? Bellek içi veritaban?
########################################
spring.datasource.url=jdbc:h2:mem:bankdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=PostgreSQL
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

########################################
# JPA & Hibernate
########################################
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# Varsay?lan ?ema
spring.jpa.properties.hibernate.default_schema=bank

########################################
# SQL Loglar? (parametre ba?lar? dahil)
########################################
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=TRACE

########################################
# H2 Console
########################################
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

########################################
# Basic Auth (in-memory kullan?c? ? ilk denemeler için)
# JDBC Auth zaten aktif; istersen bunlar? yoruma alabilirsin.
########################################
spring.security.user.name=aysu
spring.security.user.password=12345

########################################
# OAuth2 (GitHub ile GET uçlar?na eri?im)
# GitHub OAuth App olu?turup de?erleri gir.
########################################
spring.security.oauth2.client.registration.github.client-id=GITHUB_CLIENT_IDIN
spring.security.oauth2.client.registration.github.client-secret=GITHUB_CLIENT_SECRETIN
spring.security.oauth2.client.registration.github.scope=read:user,user:email

# Callback URL: http://localhost:9000/login/oauth2/code/github


################################################################
# (?STE?E BA?LI) PostgreSQL kullanacaksan a?a??y? aç, H2'yi kapat
################################################################
# spring.datasource.url=jdbc:postgresql://localhost:5432/secure_bank
# spring.datasource.username=postgres
# spring.datasource.password=postgres
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.properties.hibernate.default_schema=bank
# Ba??ml?l?k ekle: <dependency><groupId>org.postgresql</groupId><artifactId>postgresql</artifactId></dependency>
